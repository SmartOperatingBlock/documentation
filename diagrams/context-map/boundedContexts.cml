import "./domains.cml"

BoundedContext SurgicalProcessMonitoringSystemContext implements SurgicalProcessMonitoringSystemDomain {
    type = FEATURE
    domainVisionStatement = "BoundedContext responsible for the monitoring system inside the operating block"

    Aggregate SurgicalProcessAggregate {
        Entity SurgicalProcess {
            aggregateRoot
            - SurgeryID surgeryID
            - TaxCode patientTaxCode
            - RoomID operatingRoomID
            - SurgicalProcessState surgicalProcessState
            - SurgicalProcessStep surgicalProcessStep
            DateTime lastUpdateDateTime
        }

        ValueObject SurgeryID {
            String surgeryID
        }

        ValueObject TaxCode {
            String taxCode
        }

        enum SurgicalProcessState {
            PRE_SURGERY, ONGOING_SURGERY, POST_SURGERY, INTERRUPTED
        }

        enum SurgicalProcessStep {
            PATIENT_IN_PREPARATION,
            PATIENT_ON_OPERATING_TABLE,
            ANESTHESIA,
            SURGERY,
            END_OF_SURGERY,
            PATIENT_UNDER_OBSERVATION,
            TERMINATED
        }
    }

    Aggregate PatientVitalSignAggregate {
        Entity PatientVitalSign {
            - SurgeryID surgeryID
            - HeartBeat heartbeat
            - BloodPressure BloodPressure
            - RespiratoryRate respiratoryRate
            - Saturation saturation
            - BodyTemperature bodyTemperature
        }

        ValueObject HeartBeat {
            int bpm
        }
        ValueObject BloodPressure {
            int diastolicBloodPressure
            int systolicBloodPressure
            - BloodPressureUnit bloodPressureUnit
        }
        ValueObject  RespiratoryRate {
            int breathsPerMinute
        }
        ValueObject Saturation {
            int percentage
        }
        ValueObject BodyTemperature {
            double temperature
            - TemperatureUnit temperatureUnit
        }
        enum TemperatureUnit {
            CELSIUS, FAHRENHEIT
        }
        enum BloodPressureUnit {
            MMHG
        }
    }

    Aggregate HealthProfessionalInformationAggregate {
        Entity HealthProfessional {
            aggregateRoot
            - HealthProfessionalID healthProfessionalID
            String name
            String surname
            - HealthProfessionalRole role
            - RoomID roomID
            DateTime lastUpdateDateTime
        }

        enum HealthProfessionalRole {
            SURGEON, 
            NURSE, 
            ANESTHETIST
        }
    }

    Aggregate MedicalTechnologyInformationAggregate {
        Entity MedicalTechnology {
            aggregateRoot
            - MedicalTechnologyID medicalTechnologyID
            - MedicalTechnologyType medicalTechnologyType
            - SurgeryID surgeryID
            boolean inUse
            DateTime lastUpdateDateTime
        }

        ValueObject MedicalTechnologyID {
            String id
        }

        enum MedicalTechnologyType {
            ENDOSCPE, XRAY
        }
    }

    Aggregate ImplantableMedicalDeviceInformationAggregate {
        Entity ImplantableMedicalDevice {
            aggregateRoot
            - ImplantableMedicalDeviceID id
            - ImplantableMedicalDeviceType deviceType
            - SurgeryID surgeryId
            DateTime usageDateTime
        }

        ValueObject ImplantableMedicalDeviceID {
            String code
        }

        enum ImplantableMedicalDeviceType {
            PACE_MAKER,
            CATHETER
        }
    }
}
