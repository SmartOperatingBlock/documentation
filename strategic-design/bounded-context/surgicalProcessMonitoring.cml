import "../domains.cml"

BoundedContext SurgicalProcessMonitoringSystemContext implements SurgicalProcessMonitoringSystemDomain {
    type = FEATURE
    domainVisionStatement = "BoundedContext responsible for the monitoring system inside the operating block"

    Aggregate SurgicalProcessAggregate {

        Entity SurgicalProcess {
            aggregateRoot
            - ProcessId surgeryID
            DateTime dateTime
            String processType
            - PatientId patientId
            - HealthProfessionalId healthProfessionalId nullable
            - Room preOperatingRoom nullable
            - Room operatingRoom nullable
            - SurgicalProcessState processState
            - SurgicalProcessStep processStep
        }

        ValueObject ProcessId {
            String id
        }

        ValueObject HealthProfessionalId {
            String id
        }

        enum SurgicalProcessState {
            PRE_SURGERY, ONGOING_SURGERY, POST_SURGERY, TERMINATED, INTERRUPTED
        }

        enum SurgicalProcessStep {
            PATIENT_IN_PREPARATION,
            PATIENT_ON_OPERATING_TABLE,
            ANESTHESIA,
            SURGERY,
            END_OF_SURGERY,
            PATIENT_UNDER_OBSERVATION
        }

        Entity Room {
            - RoomID id
            - RoomType roomType
        }
        
        ValueObject RoomID {
            String id
        }

        enum RoomType {
            PRE_OPERATING_ROOM, OPERATING_ROOM
        }
    }

    Aggregate PatientAggregate {

        Entity Patient {
            aggregateRoot
            - PatientId patientId
            String name nullable
            String surname nullable
            -  PatientVitalSign medicalData
        }

        ValueObject PatientId {
            String id
        }

        Entity PatientVitalSign {
            - ProcessId surgeryID
            - HeartBeat heartbeat
            - BloodPressure bloodPressure
            - RespiratoryRate respiratoryRate
            - Saturation saturation
            - BodyTemperature bodyTemperature
        }

        ValueObject HeartBeat {
            int bpm
        }
        ValueObject BloodPressure {
            int diastolicBloodPressure
            int systolicBloodPressure
            - BloodPressureUnit bloodPressureUnit
        }
        ValueObject  RespiratoryRate {
            int breathsPerMinute
        }
        ValueObject Saturation {
            int percentage
        }
        ValueObject BodyTemperature {
            double temperature
            - TemperatureUnit temperatureUnit
        }
        enum TemperatureUnit {
            CELSIUS, FAHRENHEIT
        }
        enum BloodPressureUnit {
            MMHG
        }
    }

    Aggregate MedicalTechnologyInformationAggregate {
        Entity MedicalTechnology {
            aggregateRoot
            - MedicalTechnologyID medicalTechnologyID
            - MedicalTechnologyType medicalTechnologyType
            - ProcessId surgeryID
            boolean inUse
            DateTime lastUpdateDateTime
        }

        ValueObject MedicalTechnologyID {
            String id
        }

        enum MedicalTechnologyType {
            ENDOSCPE, XRAY
        }
    }

    Aggregate ImplantableMedicalDeviceInformationAggregate {
        Entity ImplantableMedicalDevice {
            aggregateRoot
            - ImplantableMedicalDeviceID id
            - ImplantableMedicalDeviceType deviceType
            - ProcessId surgeryId
            DateTime usageDateTime
        }

        ValueObject ImplantableMedicalDeviceID {
            String code
        }

        enum ImplantableMedicalDeviceType {
            PACE_MAKER,
            CATHETER
        }
    }
    
    Aggregate SurgeryBookingAggregate {
        Entity SurgeryBooking {
            aggregateRoot
            - SurgeryID surgeryId
            - SurgeryType surgeryType
            - TaxCode healthcareUserTaxCode
            - HealthProfessionalId healthProfessionalID
            DateTime surgeryDateTime
            - PatientId patientID
        }

        ValueObject SurgeryID {
            String id
        }

        ValueObject SurgeryType {
            String surgeryType
        }
        
        ValueObject TaxCode {
            String code
        }
    }
}
